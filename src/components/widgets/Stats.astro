---
interface Item {
  name: string;
  value: string;
  description1: string;
  description2: string;
}

export interface Props {

  items?: Array<Item>;
}

const {

  items = [],
} = Astro.props;
---

<section class="relative  bg-cover bg-[url('../../assets/images/exp.png')]" >
    <div class="absolute pointer-events-none "  aria-hidden="true"></div>
    <div class="relative  block  p-20" ></div>
    <div class="relative mx-20  glass-panel block p-6 pseudo-partial-border" >


  
  <div class="mx-auto justify-center grid grid-cols-3 row-gap-4  md:grid-cols-3 mt-20" >
    {
      items.map(({ name, value, description1, description2 }) => (
        <div class="text-center justify-center md:border-r md:last:border-none dark:md:border-slate-500 mb-12 md:mb-0 ">
          <div class="text-lg font-bold lg:text-5xl xl:text-6xl text-primary dark:text-white font-heading">
            {value}
          </div>
          <div class="text-lg  tracking-widest lg:text-2xl xl:text-2xl text-primary text-gray-800 dark:text-white ">
            {name}
          </div>
          <div class="text-lg  mt-20 text-primary text-gray-800 dark:text-white ">
            {description1}
          </div>
          <div class="text-lg  mt-10  text-primary text-gray-800 dark:text-white ">
            {description2}
          </div>

        </div>
      ))
    }   
  </div>

  <div class="relative mx-auto  block  p-6 " ></div>
  
  <div class="relative mx-auto mt-20 bg-slate-900 block max-w-lg p-6">
  <h1 class= "text-center">
    Patrons
  </h1>
  </div>
  
</div>
<div class="relative mx-auto  block  p-20" ></div>
</section>